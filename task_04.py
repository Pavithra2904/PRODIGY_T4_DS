# -*- coding: utf-8 -*-
"""task_04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TH5qXIu-coPUupJrcjzJjm0YmwT9mLfA
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt
# Load the dataset
data = pd.read_csv('fb_sentiment.csv')

# Data preprocessing
# Remove noise, tokenize, lowercase, etc.

# Feature extraction
vectorizer = TfidfVectorizer(max_features=1000)  # Adjust max_features as needed
X = vectorizer.fit_transform(data['FBPost'])
y = data['Label']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the classifier
classifier = LinearSVC()
classifier.fit(X_train, y_train)

# Predict the sentiments for test dataset
y_pred = classifier.predict(X_test)

# Model evaluation
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification Report:")
print(classification_report(y_test, y_pred))


# Assuming you have a list of predicted sentiments (y_pred)
# and a list of actual sentiments (y_test)

# Plot histogram of predicted sentiments
plt.figure(figsize=(8, 6))
plt.hist(y_pred, bins=3, alpha=0.7, color='blue', label='Predicted Sentiments')
plt.hist(y_test, bins=3, alpha=0.5, color='green', label='Actual Sentiments')
plt.xlabel('Sentiment')
plt.ylabel('Frequency')
plt.title('Histogram of Predicted and Actual Sentiments')
plt.xticks(range(3), labels=['Negative', 'Neutral', 'Positive'])
plt.legend()
plt.show()

# Inference: Predict sentiments for new Facebook posts using classifier.predict(new_posts)